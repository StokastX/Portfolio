---
layout: single
title:  "PBR Cheatsheet"
date:   2024-10-27 18:15:00 +0200
categories: "pbr"
use_math: true
toc: true
toc_sticky: true
---

## Introduction

As I was writing my CUDA path tracer, I noticed I was often struggling with code I had previously written, because I had to go back through the papers and articles I used to implement my renderer.

This document is intended to summarize all the theory behind backward Monte Carlo path tracing. I also had a hard time finding good resources to implement some of the algorithms, so I hope it will help others in their journey through physically based path tracing. This is why I want this article to be code agnostic and not GPU focused.

I also assume a general knowledge of light transport theory and radiometric quantities. Eric Veach's thesis is the best resource in this domain, and it is my main source of inspiration for this article.

## Light Transport Theory
We assume that the scene geometry consists of a finite set of surfaces $\mathcal{M}$ in $\mathbb{R}^3$.

Let $S^2$ be the unit sphere in $\mathbb{R}^3$, $A$ the usual surface area measure on $\mathcal{M}$, and $\sigma$ the usual surface area measure on $S^2$.

### Radiometric quantities
#### Solid angle
The solid angle defined by a set of directions $D \subset S^2$ is equal to $\sigma(D)$. It represents the area occupied by this set on the unit sphere.

The projected solid angle at point $x$ on a surface $S$ is related to the solid angle by:

$$
\begin{equation}
d\sigma^{\perp}_x(w) = \left|w \cdot N(x) \right| d\sigma(w)
\end{equation}
$$

where $N(x)$ is the surface normal at point $x$ and $w$ is a direction in $D$. The solid angle is projected onto the unit disk perpendicular to the surface normal.

#### Irradiance and radiant exitance
The density of radiant power per unit surface area at a point $x$ is called irradiance for a flux arriving at a surface, or radiant exitance for a flux leaving a surface:

$$
\begin{equation}
    E(x) = \dfrac{d\phi(x)}{dA(x)}
\end{equation}
$$

Units: $W \cdot m^{-2}$.

#### Radiance
Radiance is defined in a specific direction $w$ and measures irradiance or radiance exitance with respect to projected solid angle:

$$
\begin{align}
    L(x, w) &= \frac{d^2\phi(x, w)}{dA ^\perp _w (x) d\sigma(w)} \\
    &= \frac{d^2\phi(x, w)}{\left| w \cdot N(x) \right| dA(x) d\sigma(w)} \\
    &= \frac{dE(x)}{d\sigma  ^\perp _x (w)}
\end{align}
$$

Units: $W \cdot m^{-2} \cdot sr^{-1}$.

Why do we use the projected area $dA^\perp _w (x)$ rather than the area $dA(x)$?
Because by using $dA(x)$, the irradiance generated by an infinitesimal cone around a direction $w$ is proportional to $\cos(\theta) = | w \cdot N(x) | $ (Lambert's law).
We want to eliminate this term in the definition of radiance by using the differential area that is perpendicular to $w$ instead of $dA(x)$.

### Bidirectional scattering distribution function
For a fixed point $x$, an incident direction $w_i$ and outgoing direction $w_o$, the observed outgoing radiance $dL_o(w_o)$ is proportional to the irradiance in the incoming direction:

$$
\begin{equation}
dL_o(w_o) \propto dE(w_i)
\end{equation}
$$

The irradiance being defined in an infinitesimal cone around $w_i$ by using Equation (4):
\\[dE(w_i) = L_i(w_i) d\sigma^\perp (w_i)\\]

The bidirectional scattering distribution function (BSDF) represents this constant of proportionality for a specific $x$, $w_i$ and $w_o$:

$$
\begin{equation}
    f_s(x, w_i, w_o) = \frac{dL_o(x, w_o)}{dE(x, w_i)}
\end{equation}
$$

For a fixed point $x$, the BRDF is a restriction of $f_s$ on the reflection hemisphere $\mathcal{H}_r^2$:

$$
\begin{equation}
    f_r : \mathcal{H}_r^2 \times \mathcal{H}_r^2 \rightarrow \mathbb{R}
\end{equation}
$$

And the BTDF is a restriction of $f_s$ on $\mathcal{H}_r^2$ and the transmission hemisphere $\mathcal{H}_t^2$:

$$
\begin{equation}
    f_t : \mathcal{H}_r^2 \times \mathcal{H}_t^2 \rightarrow \mathbb{R}
\end{equation}
$$

#### Properties of the BRDF
**Symmetry**: $f_r (w_i, w_o) = f_r(w_o, w_i)$ for all $w_i$, $w_o$.

**Energy conservation**:

$$
\begin{equation}
    \int_{\mathcal{H}^2} f_r(w_i, w_o)d\sigma^\perp (w_o) \leq 1
\end{equation}
$$

for all $w_i$.

### The rendering equation
We can express the outgoing radiance $L_o$ at a point $x$ and in an outgoing direction $w_o$ as the sum of the radiance emitted by the surface at point $x$, and the scattered radiance in this direction:

$$
\begin{equation}
    L_o(x, w_o) = L_e(x, w_o) + L_s(x, w_o)
\end{equation}
$$

The infinitesimal scattered radiance generated in direction $w_o$ by an incoming irradiance in a small cone around a direction $w_i$ is given by Equation (5):

$$
\begin{equation}    
    dL_s(x, w_o) = f_s(x, w_i, w_o) L_i(x, wi)d\sigma ^\perp _x (w_i)
\end{equation}
$$

The incoming radiance in a direction $w$ can be expressed as the outgoing radiance in direction $-w$ at the intersection point $t(x)$ given by the ray casting function $t$:

$$
\begin{equation}
    L_i(x, w) = L_o(t(x), -w)
\end{equation}
$$
    

Replacing $L_i$ in Equation (10) and integrating over all incoming directions $w_i$, we get the total amount of scattered radiance in direction $w_o$:

$$
\begin{equation}
    L_s(x, w_o) = \int_{S^2}f_s(x, w_i, w_o) L_o(t(x), -w_i) d\sigma ^\perp _x (w_i)
\end{equation}
$$

Replacing this result in Equation (9), we finally get the rendering or light transport equation (LTE):

$$
\begin{equation}
    L_o(x, w_o) = L_e(x, w_o) + \int_{S^2}f_s(x, w_i, w_o) L_o(t(x), -w_i) d\sigma ^\perp _x (w_i)
\end{equation}
$$

This equation is fundamental in PBR and we will solve it recursively with path tracing.

#### The surface form of the LTE
We can change the integration domain of the LTE. Instead of integrating over the set of directions $S^2$, we will integrate over the set of surfaces of the scene $\mathcal{M}$.

For two points $x$ and $x'$, the differential solid angle around a direction $w$ is related to the differential area $dA(x')$ by:

$$
\begin{equation}
    d\sigma_x (w) = \frac{dA(x')\left|\cos\theta\right|}{r^2}
\end{equation}
$$

where $\lvert \cos \theta \rvert = \lvert w \cdot N(x') \rvert$ projects the differential area perpendicularly to $w$, and $r^2$ accounts for the distance between $x$ and $x'$ (see PBRT section 4.2.3).

Similarly, we can define the radiance  and the BSDF with respect to the points $x$, $x'$, and $x''$:

$$
\begin{equation}
     L(x \rightarrow x') = L(x, w)
\end{equation}
$$

with $w = x - x'$, and:

$$
\begin{equation}
     f_s(x \rightarrow x' \rightarrow x'') = f_s(x, w_i, w_o)
\end{equation}
$$

where $w_i = x' - x$ and $w_o = x'' - x'$

This gives the **surface form of the light transport equation**:

$$
\begin{multline}
    L_o(x'' \rightarrow x') = L_e(x'' \rightarrow x') \\
        + \int_{\mathcal{M}} f_s(x \rightarrow x' \rightarrow x'') V(x \leftrightarrow x') \frac{\left|\cos\theta\right|}{r^2} L_o(x \rightarrow x') dA(x)
\end{multline}
$$

with $V(x \leftrightarrow x')$ being the visibility term: $0$ if both points are occluded, $1$ otherwise.


## Monte Carlo integration
The rendering equation cannot be solved analytically for arbitrary scenes.
Due to its recursive nature, usual numerical integration methods using quadrature
rules are not well suited since solving the LTE requires estimating high-dimensional integrals.
Instead we will use samples of the integrand to estimate the integral.

Assuming we would like to solve this integral:

$$
\begin{equation}
   \int_{\mathbf{\Omega}} f(x) d\mu(x)
\end{equation}
$$

and that we can sample the function $f$ using N independent random variables ($X_i$) with a probability distribution function $p$, then the Monte Carlo estimator

$$
\begin{equation}
    I_N = \frac{1}{N} \sum_{i = 1}^{N} \frac{f(X_i)}{p(X_i)}
\end{equation}
$$

is an unbiased and consistent estimator for this integral.

We can easily verify the unbiasedness by computing the expected value of $I_N$:

$$
\begin{align}
    E[I_N] &= \frac{1}{N} \sum_{i = 1}^{N} \int_{\Omega} \frac{f(x)}{p(x)} p(x) d\mu(x) \\
    &= \int_{\Omega} f(x) d\mu(x)
\end{align}
$$


## Sampling strategies

### Importance sampling
### Multiple Importance Sampling

## PBR materials