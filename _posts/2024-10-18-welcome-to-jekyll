---
layout: single
title:  "Welcome to Jekyll!"
date:   2024-10-18 11:49:37 +0200
categories: jekyll update
---
You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

Jekyll requires blog post files to be named according to the following format:

`YEAR-MONTH-DAY-title.MARKUP`

Where `YEAR` is a four-digit number, `MONTH` and `DAY` are both two-digit numbers, and `MARKUP` is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.

Jekyll also offers powerful support for code snippets:

{% highlight ruby %}
def print_hi(name)
  puts "Hi, #{name}"
end
print_hi('Tom')
#=> prints 'Hi, Tom' to STDOUT.
{% endhighlight %}

Check out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk].

[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/

- If GRIS is supposed to make the unbiased contribution weights $W_Y$ converge towards $1/p(Y)$, then why not keep the same sample from the beginning?

    There are several reasons why we can't do that. First, in the way reservoir-based RIS works, 

- Why do we care about finding good samples (ie samples where f is high) if GRIS ensures a convergence to the correct probability?


{% include feature_row type="left" %}

feature_row:
  - image_path: "/assets/images/canelle_et_fromage.jpg"
    title: Nexus Renderer
    excerpt: A GPU physically based path tracer in C++ and CUDA
    url: "/nexus/"
    btn_label: "Read More"
    btn_class: "btn--primary"
  - image_path: "/assets/images/zendite_engine.jpg"
    title: Zendite (contributor)
    excerpt: A small-scale game engine in C++ and OpenGL
    url: "/zendite/"
    btn_label: "Read More"
    btn_class: "btn--primary"
  - image_path: "/assets/images/minecraft.jpg"
    title: Minecraft
    excerpt: A simple Perlin noise world generator in C++ and OpenGL
    url: "/minecraft/"
    btn_label: "Read More"
    btn_class: "btn--primary"
  - image_path: "/assets/images/mario_bros.jpg"
    title: Super Mario Bros
    excerpt: A Super Mario Bros like game written in C++ and SDL 
    url: "/mario_bros/"
    btn_label: "Read More"
    btn_class: "btn--primary"
  - image_path: "/assets/images/free_kick.jpg"
    title: Free Kick
    excerpt: A free kick game written in Python using PyOpenGL
    url: "/free_kick/"
    btn_label: "Read More"
    btn_class: "btn--primary"
  - image_path: "/assets/images/competitype.jpg"
    title: CompetiType
    excerpt: A typing speed Android app written in Kotlin using Jetpack Compose
    url: "/competitype/"
    btn_label: "Read More"
    btn_class: "btn--primary"